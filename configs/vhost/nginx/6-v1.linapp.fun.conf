# 六页纸教育平台 v1.0 MVP - 开发服务器配置
# 域名: 6-v1.linapp.fun
# 微服务架构: 前端(3000) + Content API(8003)

# HTTPS 服务器配置
server {
    listen 443 ssl http2;
    server_name 6-v1.linapp.fun;
    
    # SSL配置 (暂时使用已有证书，稍后申请专用证书)
    ssl_certificate /etc/letsencrypt/live/6-v1.linapp.fun/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/6-v1.linapp.fun/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # 安全头设置
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # API服务反向代理 - Content Service (端口8003)
    location /api/ {
        proxy_pass http://127.0.0.1:8003;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # API超时设置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # CORS配置
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE" always;
        add_header Access-Control-Allow-Headers "Accept, Content-Type, Authorization, X-Requested-With" always;
        
        # 处理预检请求
        if ($request_method = OPTIONS) {
            return 204;
        }
    }
    
    # API文档访问 - FastAPI自动文档
    location /docs {
        proxy_pass http://127.0.0.1:8003/docs;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /openapi.json {
        proxy_pass http://127.0.0.1:8003/openapi.json;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 健康检查端点
    location /health {
        proxy_pass http://127.0.0.1:8003/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        access_log off;
    }
    
    # 前端应用反向代理 - Frontend (端口3000)
    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 前端超时设置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # 静态资源优化（如果前端服务器处理不了）
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|mp4|webm|ogg)$ {
        proxy_pass http://127.0.0.1:3000;
        expires 7d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # 日志配置
    access_log /var/log/nginx/6-v1.linapp.fun.access.log;
    error_log /var/log/nginx/6-v1.linapp.fun.error.log;
    
    # 限制上传文件大小 (用于未来的文件上传功能)
    client_max_body_size 100M;

}

# HTTP重定向到HTTPS
server {
    if ($host = 6-v1.linapp.fun) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name 6-v1.linapp.fun;
    
    # Let's Encrypt证书验证目录
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
    
    # 其他请求重定向到HTTPS
    location / {
        return 301 https://$host$request_uri;
    }


}